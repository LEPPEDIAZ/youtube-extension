{"version":3,"sources":["../src/showdown-youtube.js"],"names":[],"mappings":";AAAA,GAAG;AACH,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC;AACrB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM;AACpC,CAAC,CAAC,CAAC,KAAK,CAAC;AACT,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,EAAE,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC,WAAW,CAAC;AAChD,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,EAAE;AACL,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE,CAAC,WAAW;AACnC,CAAC,EAAE;AACH;AACA,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACd;AACA,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,eAAe,GAAG,MAAM,GAAG;AAC1G,IAAI,QAAQ,CAAC,CAAC,CAAC,OAAO,KAAK,oBAAoB,GAAG,MAAM,OAAO,iBAAiB,KAAK,EAAE,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAC9H,IAAI,SAAS,CAAC,CAAC,CAAC,OAAO,KAAK,eAAe,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAC7E;AACA,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;AACtB,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACzC,MAAM,GAAG,CAAC,CAAC,CAAC;AACZ,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;AAClE,QAAQ,MAAM,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG;AAC1C,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;AACd,QAAQ,MAAM,CAAC,KAAK,CAAC;AACrB,MAAM,CAAC;AACP,IAAI,EAAE;AACN,IAAI,MAAM,CAAC,CAAC;AACZ,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK;AACrB,MAAM,CAAC;AACP,QAAQ,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;AACrB,QAAQ,KAAK,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,mBAAmB,CAAC,EAAE,CAAC,SAAS;AACjF,QAAQ,OAAO,CAAC,CAAC,OAAO;AACxB,MAAM,EAAE;AACR,MAAM,EAAE,CAAC,SAAS,CAAC,KAAK;AACxB,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG;AACpG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM;AACvE,MAAM,CAAC;AACP,QAAQ,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE;AACvB,QAAQ,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,mBAAmB,CAAC,IAAI;AACvD,QAAQ,OAAO,CAAC,CAAC,OAAO;AACxB,MAAM,CAAC;AACP,IAAI,EAAE;AACN,EAAE,CAAC;AACH;AACA,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;AACvB,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;AACvF,IAAI,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;AACjD,EAAE,CAAC;AACH,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;AACvB,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;AACtC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;AAC7B,EAAE,CAAC;AACH;AACA,KAAK","file":"showdown-youtube.js","sourcesContent":["/**\n * Youtube Extension.\n * Uses image syntax to embed videos\n * Usage:\n * ![youtube video][http://youtu.be/dQw4w9WgXcQ]\n *\n * or\n *\n * ![youtube video][1]\n * [1]: http://youtu.be/dQw4w9WgXcQ\n */\n\n(function () {\n\n  var iframe = '<iframe src=\"//www.youtube.com/embed/%1?rel=0\" frameborder=\"0\" allowfullscreen></iframe>',\n    fullLink = /(?:(?:https?:)?(?:\\/\\/)?)(?:(?:www)?\\.)?youtube\\.(?:.+?)\\/(?:(?:watch\\?v=)|(?:embed\\/))([a-zA-Z0-9_-]{11})/gi,\n    shortLink = /(?:(?:https?:)?(?:\\/\\/)?)?youtu\\.be\\/([a-zA-Z0-9_-]{11})/gi;\n\n  function youtube() {\n    var replace = function (match, url) {\n      var m;\n      if ((m = shortLink.exec(url)) || (m = fullLink.exec(url))) {\n        return iframe.replace('%1', m[1]);\n      } else {\n        return match;\n      }\n    };\n    return [\n      // Inline style\n      {\n        type: 'lang',\n        regex: '!\\\\[.*]\\\\s?\\\\([ \\\\t]*(\\\\S+?)[ \\\\t]*(?:[\\'\"].*?[\\'\"][ \\\\t]*)?\\\\)',\n        replace: replace\n      },\n      // Reference Style\n      // It's a bit hackish but we let the core parsers replace the reference image for an image tag\n      // then we replace the full img tag in the output with our iframe\n      {\n        type: 'output',\n        regex: '(?:<p>)<img src=\"(.+?)\".+?\\/>(?:</p>)',\n        replace: replace\n      }\n    ];\n  }\n\n  // Client-side export\n  if (typeof window !== 'undefined' && window.showdown && window.showdown.extensions) {\n    window.showdown.extensions.youtube = youtube;\n  }\n  // Server-side export\n  if (typeof module !== 'undefined') {\n    module.exports = youtube;\n  }\n\n}());\n"]}